{"version":3,"file":"component---src-pages-awardees-tsx-401bde395feebc7b3845.js","mappings":"yJAgDA,IA7CgBA,IACZ,MAAM,KAAEC,GAASD,EASjB,OACIE,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,UACXD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,yEACfD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,mBACXD,EAAAA,cAACE,EAAAA,GAAI,CAACD,UAAU,eAAeE,GAAG,KAC9BH,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,YAAYG,IAAI,cAAcC,MAAM,MAAMC,IAAI,wBAEjEN,EAAAA,cAAAA,SAAAA,CAAQC,UAAU,iBAAiBM,KAAK,SAAS,iBAAe,WAAW,iBAAe,aAAa,gBAAc,YAAY,gBAAc,QAAQ,aAAW,qBAClKP,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,yBAEhBD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,2BAA2BO,GAAG,aAC7CR,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,cAlBZ,CACV,CAAEO,GAAK,OAAQC,MAAQ,OAAQC,KAAO,KACtC,CAAEF,GAAK,UAAWC,MAAQ,UAAWC,KAAO,YAC5C,CAAEF,GAAK,SAAUC,MAAQ,aAAcC,KAAO,WAC9C,CAAEF,GAAK,SAAUC,MAAQ,WAAYC,KAAO,cAgBtBC,KAAIC,GAGFZ,EAAAA,cAAAA,KAAAA,CAAIa,IAAKD,EAAKJ,GAAIP,UAAU,YAEvBW,EAAKF,MAAQX,EAAKe,QAAQ,OAAQ,IAC9Bd,EAAAA,cAACE,EAAAA,GAAI,CAACD,UAAU,kBAAkB,eAAa,OAAOE,GAAIS,EAAKF,MAAOE,EAAKH,OAC3ET,EAAAA,cAACE,EAAAA,GAAI,CAACD,UAAU,WAAWE,GAAIS,EAAKF,MAAOE,EAAKH,cAW3E,C,yFCJd,UApCmEM,IACjE,MAAM,KAAEC,GAASD,EAEjB,OACEf,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAACiB,EAAAA,EAAM,CAAClB,KAAMgB,EAAUhB,OAExBC,EAAAA,cAAAA,KAAAA,KAAI,YAKFgB,EAAKE,gBAAgBC,MAAMR,KAAIS,IAAS,aACtCpB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,aACfD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,aACbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,cAAcmB,EAAUC,MACtCrB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,OACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,OACfD,EAAAA,cAAAA,IAAAA,KAAGA,EAAAA,cAAAA,IAAAA,KAAG,aAEJoB,SAAmB,QAAV,EAATA,EAAWE,gBAAQ,WAAV,EAATC,EAAqBZ,KAAIa,GACrBxB,EAAAA,cAAAA,MAAAA,KAAMwB,aAAC,EAADA,EAAGC,KAAK,MAAID,aAAC,EAADA,EAAGE,OAAO,IAAC,wBAAMzB,UAAU,iBAAiBuB,aAAC,EAADA,EAAGG,cAKzE3B,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,eAEX,IAIH,EAMJ,MAAM2B,EAAe,IAE1B5B,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAO,iBACPA,EAAAA,cAAAA,OAAAA,CAAM6B,IAAI,aAAaC,KAAK,qCAC5B9B,EAAAA,cAAAA,OAAAA,CAAM6B,IAAI,aAAaC,KAAK,4CAC5B9B,EAAAA,cAAAA,OAAAA,CAAM6B,IAAI,aAAaC,KAAK,kBAC5B9B,EAAAA,cAAAA,SAAAA,CAAQM,IAAI,8C","sources":["webpack://cmb-natatanging-guro/./src/components/TopNav.tsx","webpack://cmb-natatanging-guro/./src/pages/awardees.tsx"],"sourcesContent":["import { Link } from \"gatsby\"\r\nimport * as React from \"react\"\r\n\r\nconst TopNav = (props : any) => {\r\n    const { path } = props\r\n\r\n    const items = [\r\n        { id : \"home\", label : \"Home\", link : \"/\" },\r\n        { id : \"history\", label : \"History\", link : \"/history\" },\r\n        { id : \"awards\", label : \"The Awards\", link : \"/awards\" },\r\n        { id : \"awards\", label : \"Awardees\", link : \"/awardees\" }\r\n    ]\r\n\r\n    return (\r\n        <div className=\"topnav\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top border-bottom\">\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    <img className=\"site-logo\" alt=\"CNG NG Logo\" width=\"300\" src=\"/images/cmb-ng.png\" />\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    {\r\n                        items.map(item => {\r\n\r\n                            return (\r\n                                <li key={item.id} className=\"nav-item\">\r\n                                {\r\n                                    (item.link == path.replace(/\\/+$/, \"\") ? \r\n                                        (<Link className=\"nav-link active\" aria-current=\"page\" to={item.link}>{item.label}</Link>) :\r\n                                        (<Link className=\"nav-link\" to={item.link}>{item.label}</Link>)\r\n                                    )\r\n                                }\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n                </div>\r\n            </div>\r\n            </nav>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default TopNav\r\n","import * as React from \"react\"\r\nimport { graphql, type HeadFC, type PageProps } from \"gatsby\"\r\nimport TopNav from \"../components/TopNav\"\r\n\r\nconst IndexPage: React.FC<PageProps<Queries.AwardeesPageQuery>> = (pageProps) => {\r\n  const { data } = pageProps\r\n\r\n  return (\r\n    <main>\r\n      <TopNav path={pageProps.path}></TopNav>\r\n\r\n      <h1>\r\n      Awardees\r\n      </h1>\r\n\r\n      {\r\n        data.allAwardeesYaml.nodes.map(awardYear => (\r\n          <div className=\"card my-3\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{awardYear.year}</h5>\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n              <p><b>Awardees</b></p>\r\n              {\r\n                awardYear?.awardees?.map(a => (\r\n                    <div>{a?.name} - {a?.campus} <span className=\"badge bg-info\">{a?.cluster}</span></div>\r\n                ))\r\n              }\r\n              </div>\r\n            </div>\r\n            <p className=\"card-text\"></p>\r\n          </div>\r\n        </div>\r\n        ))\r\n      }\r\n\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n\r\nexport const Head: HeadFC = () => \r\n(\r\n  <>\r\n    <title>Past Awardees</title>\r\n    <link rel=\"stylesheet\" href=\"/lib/bootstrap/css/bootstrap.css\" />\r\n    <link rel=\"stylesheet\" href=\"/lib/bootstrap/css/bootstrap-reboot.css\" />\r\n    <link rel=\"stylesheet\" href=\"/css/site.css\" />\r\n    <script src=\"/lib/bootstrap/js/bootstrap.bundle.min.js\" />\r\n    </>\r\n)\r\n\r\nexport const query = graphql`\r\n  query AwardeesPage  {\r\n    allAwardeesYaml {\r\n      nodes {\r\n        year\r\n        ordinal\r\n        awardees {\r\n          name\r\n          campus\r\n          cluster\r\n        }       \r\n      }\r\n    }\r\n  }`"],"names":["props","path","React","className","Link","to","alt","width","src","type","id","label","link","map","item","key","replace","pageProps","data","TopNav","allAwardeesYaml","nodes","awardYear","year","awardees","_awardYear$awardees","a","name","campus","cluster","Head","rel","href"],"sourceRoot":""}